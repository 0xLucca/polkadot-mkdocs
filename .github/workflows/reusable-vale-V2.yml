name: Reusable Vale Review
on:
  workflow_call:
    inputs:
      repo:
        description: "The repository to check, in the format owner/repo"
        required: true
        type: string
      pr_number:
        description: "The pull request number to check"
        required: true
        type: string
      commit_sha:
        description: "The commit SHA to check"
        required: true
        type: string
    secrets:
      GH_TOKEN:
        required: true

jobs:
  review-docs:
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write
    outputs:
      files: ${{ steps.get-modified-files.outputs.files }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          repository: 0xLucca/polkadot-docs-test

      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          repository: 0xLucca/polkadot-mkdocs
          sparse-checkout: |
            .github/scripts/process_output.py
            .github/styles
            .vale.ini
          sparse-checkout-cone-mode: false
          path: vale

      - name: Move Vale files
        run: |
          mv vale/.github/scripts/process_output.py .
          mv vale/.vale.ini .
          mv vale/.github/styles .github/styles

      - name: Get modified files
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
        id: get-modified-files
        run: |
          changed_files=$(gh pr diff --repo ${{ inputs.repo }} --name-only ${{ inputs.pr_number }} | grep '\.md$' || true)
          md_files=$(echo "$changed_files" | tr '\n' ' ' | sed 's/ $//')
          echo "Modified md files: $md_files"
          echo "files=$md_files" >> $GITHUB_OUTPUT

      - name: Install Vale
        run: |
          wget https://github.com/errata-ai/vale/releases/download/v3.7.1/vale_3.7.1_Linux_64-bit.tar.gz
          mkdir bin && tar -xvzf vale_3.7.1_Linux_64-bit.tar.gz -C bin

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: 3.x

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install requests

      - name: Run Vale
        run: |
          ./bin/vale --output="JSON" ${{ steps.get-modified-files.outputs.files }} | tee output.json || true
        
      - name: Process Vale's output and create a review
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
          PR_NUMBER: ${{ inputs.pr_number }}
          REPO: ${{ inputs.repo }}
          COMMIT_SHA: ${{ inputs.commit_sha }}
        run: |
          python process_output.py
